buildscript {
    ext {
        kotlinVersion = '1.2.40'
        vertxVersion = '3.5.1'
        rxjavaVersion = '2.1.1'
        logbackVersion = '1.1.7'
        commonsLangVersion = '3.4'
        morphiaVersion = '1.3.2'
        jacksonVersion = '2.9.0.pr2'
        jUnitVersion = '4.12'
        logstashLogbackEncoderVersion = '4.7'
        papertrailLogbackVersion = '1.0.0'
        toothpickVersion = '1.1.2'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id "org.jetbrains.kotlin.jvm" version "1.2.40"
    id "org.jetbrains.kotlin.kapt" version "1.2.40"
}

apply plugin: 'idea'
group 'com.vertx.toothpick'

mainClassName = 'com.vertx.toothpick.Application.kt'
def mainVerticleName = "com.vertx.toothpick.MainVerticle"
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

repositories {
    jcenter()
}

dependencies {
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-rx-java:$vertxVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    compile "io.vertx:vertx-rx-java2:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-web-templ-pebble:$vertxVersion"
    compile "io.vertx:vertx-config:$vertxVersion"
    compile "io.vertx:vertx-lang-kotlin:$vertxVersion"
    compile "io.vertx:vertx-hazelcast:$vertxVersion"
    compile "io.vertx:vertx-auth-common:$vertxVersion"

    kapt "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothpickVersion"
    compile "com.github.stephanenicolas.toothpick:toothpick-runtime:$toothpickVersion"
    testCompile "com.github.stephanenicolas.toothpick:toothpick-testing:$toothpickVersion"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"

    compile "ch.qos.logback:logback-classic:$logbackVersion"

    compile "org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile("net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}")
    compile("com.papertrailapp:logback-syslog4j:${papertrailLogbackVersion}")

    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile "junit:junit:$jUnitVersion"

}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
    }
}

idea {
    module {
        testSourceDirs += file('build/generated/source/kapt/test')
        sourceDirs += file('build/generated/source/kapt/main')
    }
}

kapt {
    correctErrorTypes = true
    arguments {
        arg("toothpick_registry_package_name", "com.vertx.toothpick")
    }
}

shadowJar {
    baseName = 'core'
    classifier = 'fat'
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

task docker(type: Zip, dependsOn: 'shadowJar') {
    doLast {
        copy {
            from "${projectDir}/deployment/"
            into "${buildDir}/dist"
            include 'docker-compose.yml'
        }
    }
    from("${projectDir}/deployment/") {
        exclude("docker-compose.yml")
        include("*/*", "*")
    }
    from("${buildDir}/libs/") {
        into "api"
        include '*.jar'
    }
    archiveName "docker-kotlin-api.zip"
    destinationDir new File("$buildDir", 'dist')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}

run {
    args = [
            'run', mainVerticleName,
//            "-conf", confPath,
            "--redeploy=$watchForChange",
            "--launcher-class=$mainClassName",
            "--on-redeploy=$doOnChange",
            // used for attaching remote debugger
            "--java-opts", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000"
    ]
}
